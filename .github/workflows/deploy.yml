name: CI/CD - Deploy to CapRover

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read
  packages: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker image
        run: |
          IMAGE="ghcr.io/${{ github.repository }}:${{ github.sha }}"
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV
          docker build -t "$IMAGE" .
          docker push "$IMAGE"

            - name: Deploy to CapRover (update appDefinition)
        env:
          CAPROVER_URL: ${{ secrets.CAPROVER_URL }}      # ex.: http://captain.167-71-70-89.nip.io
          CAPROVER_PASSWORD: ${{ secrets.CAPROVER_PASSWORD }}
          APP_NAME: ${{ secrets.APP_NAME }}
          IMAGE: ${{ env.IMAGE }}
        run: |
          set -e

          echo "üîê Logging in at $CAPROVER_URL"
          LOGIN_RESP=$(curl -sS -X POST "$CAPROVER_URL/api/v2/login" \
            -H "Content-Type: application/json" \
            -d "{\"password\":\"$CAPROVER_PASSWORD\"}")
          echo "Login response: $LOGIN_RESP"

          TOKEN=$(echo "$LOGIN_RESP" | sed -n 's/.*"token":"\([^"]*\)".*/\1/p')
          if [ -z "$TOKEN" ]; then
            echo "‚ùå Failed to parse token"; exit 1
          fi

          echo "üöÄ Updating appDefinition for $APP_NAME with image $IMAGE"
          BODY="{\"appName\":\"$APP_NAME\",\"captainDefinition\":{\"schemaVersion\":2,\"imageName\":\"$IMAGE\"}}"
          OVERRIDE_RESP=$(curl -sS -o /tmp/resp.json -w '%{http_code}' \
            -X POST "$CAPROVER_URL/api/v2/apps/appDefinitions/update" \
            -H "x-captain-auth: $TOKEN" \
            -H "Content-Type: application/json" \
            -d "$BODY")

          echo "HTTP code: $OVERRIDE_RESP"
          echo "Response body:"
          cat /tmp/resp.json || true
          echo

          grep -qi '"status":"ok"' /tmp/resp.json || (echo "‚ùå CapRover returned non-ok"; exit 1)

          echo "‚úÖ Deploy requested successfully."
