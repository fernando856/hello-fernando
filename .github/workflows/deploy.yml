      - name: Deploy to CapRover (update appDefinition)
        env:
          CAPROVER_URL: ${{ secrets.CAPROVER_URL }}      # ex.: http://captain.167-71-70-89.nip.io
          CAPROVER_PASSWORD: ${{ secrets.CAPROVER_PASSWORD }}
          APP_NAME: ${{ secrets.APP_NAME }}
          IMAGE: ${{ env.IMAGE }}
        run: |
          set -euo pipefail

          echo "üîê Logging in at $CAPROVER_URL"
          LOGIN_RESP=$(curl -sS -X POST "$CAPROVER_URL/api/v2/login" \
            -H "Content-Type: application/json" \
            -d "{\"password\":\"$CAPROVER_PASSWORD\"}")
          echo "Login response: $LOGIN_RESP"

          TOKEN=$(echo "$LOGIN_RESP" | sed -n 's/.*"token":"\([^"]*\)".*/\1/p')
          if [ -z "$TOKEN" ]; then
            echo "‚ùå Failed to parse token"; exit 1
          fi

          echo "üöÄ Updating appDefinition for $APP_NAME with image $IMAGE"
          BODY="{\"appName\":\"$APP_NAME\",\"captainDefinition\":{\"schemaVersion\":2,\"imageName\":\"$IMAGE\"}}"

          # *** Use o caminho sob /user/apps ***
          HTTP_CODE=$(curl -sS -o /tmp/resp.json -w '%{http_code}' \
            -X POST "$CAPROVER_URL/api/v2/user/apps/appDefinitions/update" \
            -H "x-captain-auth: $TOKEN" \
            -H "Content-Type: application/json" \
            -d "$BODY")

          echo "HTTP code: $HTTP_CODE"
          echo "Response body:"; cat /tmp/resp.json || true

          [ "$HTTP_CODE" = "200" ] || (echo "‚ùå CapRover HTTP $HTTP_CODE"; exit 1)
          grep -qi '"status":"ok"' /tmp/resp.json || (echo "‚ùå CapRover returned non-ok"; exit 1)

          echo "‚úÖ Deploy requested successfully."
